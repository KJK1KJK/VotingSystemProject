services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "${BACKEND_PORT}:8000"
    networks: 
      - voting-net
    depends_on:
      - keycloak
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:3000"
    networks: 
      - voting-net
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true 
    stdin_open: true
    tty: true

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --import-realm --override=true
    environment:
      KC_DB: ${KC_DB}
      KC_DB_URL: jdbc:postgresql://${KC_DB_HOST}:5432/${KC_DB_NAME}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks: 
      - voting-net
    ports:
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - ./sso/keycloak_data:/opt/keycloak/data
      - ./sso/keycloak_import:/opt/keycloak/data/import
    env_file:
      - .env

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${KC_DB_NAME}
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    networks: 
      - voting-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  postgres_data:

networks:
  voting-net:
    driver: bridge